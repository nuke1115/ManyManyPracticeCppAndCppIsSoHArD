#include <stdio.h>
#include <iostream>
#include <list>
using namespace std;

class Stack
{
private:
	list<int> _internalList;
	

public:
	Stack()
	{
		
	}

	void push(int item)
	{
		_internalList.push_back(item);
	}

	int pop()
	{
		int tmp = -1;

		if (!_internalList.empty())
		{
			tmp = _internalList.back();
			_internalList.pop_back();
		}

		return tmp;
	}

	int size() const
	{
		return _internalList.size();
	}

	bool empty() const
	{
		bool isEmpty = true;

		if (!_internalList.empty())
		{
			isEmpty = false;
		}
		return isEmpty;
	}

	int top() const
	{
		int tmp = -1;

		if (!_internalList.empty())
		{
			tmp = _internalList.back();
		}
		return tmp;
	}

};



int main()
{

	//char result[3]; 와 char result[3] = ""; 이것과의 차이
	//strcat과 strcpy의 차이 찾기

	//std::cout 과 printf() , puts() 의 차이
	//스트림과 버퍼란?
	//그리디 알고리즘이란?
	// & 와 addressof 의 차이
	//배열의 시작점을 포인터로 지정하고, 그 포인터에 1씩 더하면, 배열의 다음 인덱스의 값을 찾을수 있다
	//배열에 인덱스로 접근하는게 아니라, 포인터로 접근이 가능한가?
	



	return 0;
}

//c++의 char 는 c#의 byte와 비슷함
//c++에서는 문자,숫자 다 되면, c#에선 오로지 문자만 되고, 숫자는 byte로 나뉨